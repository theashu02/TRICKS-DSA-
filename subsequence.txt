class Solution {
public:
    vector<vector<int>> ans;
    void solve(int index, vector<int> &v, vector<int> nums, int n){
        if(index==n){
            ans.push_back(v);
            return; 
        }
        v.push_back(nums[index]);
        solve(index+1, v, nums, n);
        v.pop_back();
        solve(index+1, v, nums, n);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        int n = nums.size();
        vector<int> v;
        solve(0, v, nums, n);
        return ans;
    }
};

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

print the subsequence in this type of order not print combination 